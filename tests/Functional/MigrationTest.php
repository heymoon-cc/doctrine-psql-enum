<?php

namespace HeyMoon\DoctrinePostgresEnum\Tests\Functional;

use HeyMoon\DoctrinePostgresEnum\Tests\Fixtures\Kernel;
use PHPUnit\Framework\TestCase;
use Symfony\Bundle\FrameworkBundle\Console\Application;
use Symfony\Component\Console\Input\ArrayInput;
use Symfony\Component\Console\Output\BufferedOutput;

class MigrationTest extends TestCase
{
    private static Kernel $kernel;

    public function setUp(): void
    {
        self::$kernel = new Kernel('prod', false);
    }

    public function tearDown(): void
    {
        self::$kernel->shutdown();
    }

    public function testUpdateSchema()
    {
        self::$kernel->boot();
        $doctrine = self::$kernel->getContainer()->get('doctrine');
        $connection = $doctrine->getConnection();

        $connection->executeQuery("DROP TYPE another_example");
        $connection->executeQuery("CREATE TYPE another_example AS ENUM('foo')");

        $application = new Application(self::$kernel);
        $command = $application->get('doctrine:schema:update');
        $output = new BufferedOutput();
        $command->run(new ArrayInput(['--dump-sql' => true]), $output);

        $expected = [
            "DROP TYPE IF EXISTS example;",
            "CREATE TYPE example AS ENUM ('test','case');",
            "ALTER TYPE another_example ADD VALUE 'bar';",
            "CREATE TABLE HasEnumEntity (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, status example NOT NULL, another another_example NOT NULL, PRIMARY KEY(id));",
        ];

        $sql = explode(PHP_EOL, $output->fetch());
        array_pop($sql);

        $this->assertEquals($expected, $sql);
    }
}
